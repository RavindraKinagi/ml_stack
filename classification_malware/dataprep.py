# Preparation
# import library yang dibutuhkan

import numpy as np 
import pandas as pd
import seaborn as sns
from matplotlib import pyplot as plt
from sklearn.metrics import roc_curve, roc_auc_score, classification_report
from sklearn.svm import SVC
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.metrics import confusion_matrix, classification_report

# mengetahui letak dataset berada
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# membuka dataset dan mengubahnya menjadi dataframe
file = open('/kaggle/input/classification-of-malwares/ClaMP_Integrated-5184.csv')
df_integrated_data = pd.read_csv(file, skip_blank_lines=True, na_filter=False, encoding='utf-8')

print('Total Shape :',df_integrated_data.shape)
df_integrated_data.head()

# checking column and the data type
for col in df_integrated_data.columns:
  print('COLUMN:', col, 'DATA_TYPE:', df_integrated_data[col].dtype, 'UNIQUE_VAL:', df_integrated_data[col].nunique())

# Checking null value on each column in dataset
df_integrated_data.isna().sum()/len(df_integrated_data)*100

# checking class classification (1= malware, 0=benign)
df_integrated_data['class'].value_counts()

# plot the class of dataset
fig = plt.figure(figsize=(5, 4))
df_integrated_data['class'].value_counts().plot(kind='bar')

# mengubah kolom 'packer_type' menjadi 'pt_num' dengan integer yang sesuai
number = df_integrated_data['packer_type'].unique()
p_types = {number[i] : i for i in range(len(number))}
temp = []
for n in df_integrated_data['packer_type']:
    temp.append(p_types[n])
df_integrated_data['pt_num'] = temp

y = df_integrated_data.pop('class')
df_integrated_data.pop('packer_type')

# Split dataset untuk training dan testing
x_train, x_test, y_train, y_test = train_test_split(
    df_integrated_data, y, test_size=0.3, random_state=0)

